* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* variables */
:root {
  --cell-size: 100px;
  --mark-size: calc(var(--cell-size) * 0.9);
}

.game-title {
  text-align: center;
  margin-top:5.1rem;
  color: rgb(44, 44, 44);
  font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}
.board {
  width: 100vw;
  height: 100vh;
  display: grid;
  justify-content: center;
  align-content: center;
  grid-template-columns: repeat(3, auto);
}

.cell {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--cell-size);
  height: 100px;
  border: 1px solid black;
  cursor: pointer;
}

/* remove borders from cells */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1) {
  border-left: none;
}
.cell:nth-child(3n + 3) {
  border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
  border-bottom: none;
}

/* if hover over 'x' or 'circle' cursor shows not allowed symbol */
.cell.x,
.cell.circle {
  cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before {
  background-color: black;
}

/* make hover colors light gray */
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
  background-color: lightgray;
}

/* create 'x' bars in cell with 'x' class*/
.cell.x::before,
.cell.x::after,
/* when hovering over cell with class of x show gray 'x */
/* using the :not() to say when its not these class i.e. empty cell then do hover effect */
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  position: absolute;
  content: "";
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
}

/* rotate 'x' bars */
.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg);
}
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);
}

/* create 'o' bars in cell with 'circle' class*/
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  position: absolute;
  content: "";
  border-radius: 50%;
}

/* larger 'before circle' is behind and black */
.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

/* smaller after circle in front and white */
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: white;
}


.winning-message {
    display: none; 
    position: fixed;
    top: 0;
    left: 0;
    right:0;
    bottom:0;
    background-color: rgba(0,0,0,.9);
    font-size: 5rem;
    color: white;
    flex-direction: column;
}

.winning-message button{
    background-color: white;
    color:black;
    font-size: 3rem;
    border: 1px solid black;
    padding:.25em .5em;
    cursor: pointer;
    border-radius: 3px;
    margin:1rem;
}

.winning-message button:hover {
    background-color: black;
    color:white;
    border: 1px solid white; 
}

/* show winning message from display none to display flex */
.winning-message.show {
    display: flex;
    justify-content: center;
    align-items: center;
}